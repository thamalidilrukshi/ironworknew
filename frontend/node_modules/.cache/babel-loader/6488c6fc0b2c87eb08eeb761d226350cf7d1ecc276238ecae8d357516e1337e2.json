{"ast":null,"code":"import{useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";const ProtectedRoute=_ref=>{let{children}=_ref;const navigate=useNavigate();useEffect(()=>{var _document$cookie$spli;// Check for token in cookies\nconst token=(_document$cookie$spli=document.cookie.split('; ').find(row=>row.startsWith('token=')))===null||_document$cookie$spli===void 0?void 0:_document$cookie$spli.split('=')[1];// Redirect to login page if no token is found\nif(!token){navigate('/Customers');// Updated to '/Loging'\n}},[navigate]);// If token exists, render children components (e.g., Customers)\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["useEffect","useNavigate","ProtectedRoute","_ref","children","navigate","_document$cookie$spli","token","document","cookie","split","find","row","startsWith"],"sources":["C:/xampp/htdocs/iron iron/iron_work/simply-clone/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check for token in cookies\r\n    const token = document.cookie.split('; ').find(row => row.startsWith('token='))?.split('=')[1];\r\n    \r\n    // Redirect to login page if no token is found\r\n    if (!token) {\r\n      navigate('/Customers');  // Updated to '/Loging'\r\n    }\r\n  }, [navigate]);\r\n\r\n  // If token exists, render children components (e.g., Customers)\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAAE,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,KAAAM,qBAAA,CACd;AACA,KAAM,CAAAC,KAAK,EAAAD,qBAAA,CAAGE,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAAP,qBAAA,iBAAjEA,qBAAA,CAAmEI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAE9F;AACA,GAAI,CAACH,KAAK,CAAE,CACVF,QAAQ,CAAC,YAAY,CAAC,CAAG;AAC3B,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd;AACA,MAAO,CAAAD,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}