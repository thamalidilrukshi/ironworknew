{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iron iron\\\\iron_work\\\\simply-clone\\\\frontend\\\\src\\\\components\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nconst ImageUploader = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]); // State to store images fetched from the server\n  const navigate = useNavigate();\n\n  // Check if the user is logged in\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"You need to log in first.\");\n      navigate(\"/Loging\");\n    }\n\n    // Fetch images from server on component mount\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/images');\n        setImages(response.data); // Store images in the state\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, [navigate]);\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!image) {\n      alert('Please select an image to upload!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const response = await axios.post('http://localhost:3001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload success:', response.data);\n      // Fetch updated list of images after upload\n      const newImages = await axios.get('http://localhost:3001/images');\n      setImages(newImages.data);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  const handleDelete = async imageId => {\n    try {\n      await axios.delete(`http://localhost:3001/image/${imageId}`);\n      console.log('Image deleted');\n      // Remove the deleted image from the state\n      setImages(prevImages => prevImages.filter(img => img._id !== imageId));\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-gallery\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3001${image.filepath}`,\n          alt: `uploaded img ${image._id}`,\n          style: {\n            width: '100px',\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(image._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, image._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"o2BDrPRdfNxyicXOEHT38of2u8w=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","im","ImageUploader","_s","image","setImage","images","setImages","navigate","token","localStorage","getItem","alert","fetchImages","response","get","data","error","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","log","newImages","handleDelete","imageId","delete","prevImages","filter","img","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","className","map","src","filepath","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/iron iron/iron_work/simply-clone/frontend/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nim\r\n\r\nconst ImageUploader = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [images, setImages] = useState([]); // State to store images fetched from the server\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the user is logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      alert(\"You need to log in first.\");\r\n      navigate(\"/Loging\");\r\n    }\r\n\r\n    // Fetch images from server on component mount\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/images');\r\n        setImages(response.data); // Store images in the state\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, [navigate]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!image) {\r\n      alert('Please select an image to upload!');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('Upload success:', response.data);\r\n      // Fetch updated list of images after upload\r\n      const newImages = await axios.get('http://localhost:3001/images');\r\n      setImages(newImages.data);\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (imageId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/image/${imageId}`);\r\n      console.log('Image deleted');\r\n      // Remove the deleted image from the state\r\n      setImages((prevImages) => prevImages.filter((img) => img._id !== imageId));\r\n    } catch (error) {\r\n      console.error('Error deleting image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br /><br /><br /><br /><br />\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload Image</button>\r\n\r\n      <div className=\"image-gallery\">\r\n        {images.map((image) => (\r\n          <div key={image._id} className=\"image-item\">\r\n            <img\r\n              src={`http://localhost:3001${image.filepath}`} \r\n              alt={`uploaded img ${image._id}`} \r\n              style={{ width: '100px', height: '100px' }}\r\n            />\r\n            <button onClick={() => handleDelete(image._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}