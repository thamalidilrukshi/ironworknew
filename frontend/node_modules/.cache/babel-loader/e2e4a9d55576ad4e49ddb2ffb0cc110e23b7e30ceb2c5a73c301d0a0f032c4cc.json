{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\iron iron\\\\iron_work\\\\simply-clone\\\\frontend\\\\src\\\\components\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/ImageUploader.css'; // Ensure you have this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  // Check if the user is logged in\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('You need to log in first.');\n      navigate('/Login'); // Corrected typo from 'Loging' to 'Login'\n    }\n\n    // Fetch images from server on component mount\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/images');\n        setImages(response.data);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n        setError('Failed to fetch images. Please try again later.');\n      }\n    };\n    fetchImages();\n  }, [navigate]);\n  const handleFileChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!image || !name || !description) {\n      setError('Please fill all fields and select an image to upload!');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('name', name);\n    formData.append('description', description);\n    try {\n      const response = await axios.post('http://localhost:3001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Upload success:', response.data);\n      setSuccess('Image uploaded successfully!');\n      // Fetch updated list of images after upload\n      const newImages = await axios.get('http://localhost:3001/images');\n      setImages(newImages.data);\n      // Clear form fields\n      setImage(null);\n      setName('');\n      setDescription('');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setError('Failed to upload image. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDelete = async imageId => {\n    if (window.confirm('Are you sure you want to delete this image?')) {\n      try {\n        await axios.delete(`http://localhost:3001/image/${imageId}`);\n        console.log('Image deleted');\n        setSuccess('Image deleted successfully!');\n        // Remove the deleted image from the state\n        setImages(prevImages => prevImages.filter(img => img._id !== imageId));\n      } catch (error) {\n        console.error('Error deleting image:', error);\n        setError('Failed to delete image. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-uploader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/jpeg, image/png, image/gif\",\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter image name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter image description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: isLoading,\n        className: \"upload-button\",\n        children: isLoading ? 'Uploading...' : 'Upload Image'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-gallery\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3001${image.filepath}`,\n          alt: `uploaded img ${image._id}`,\n          className: \"gallery-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: image.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(image._id),\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, image._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"6i1kIVbsKJGm7eFNfPdpYs4jnzg=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ImageUploader","_s","image","setImage","name","setName","description","setDescription","images","setImages","isLoading","setIsLoading","error","setError","success","setSuccess","navigate","token","localStorage","getItem","alert","fetchImages","response","get","data","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","log","newImages","handleDelete","imageId","window","confirm","delete","prevImages","filter","img","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","placeholder","value","onClick","disabled","map","src","filepath","alt","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/iron iron/iron_work/simply-clone/frontend/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../assets/css/ImageUploader.css'; // Ensure you have this CSS file for styling\r\n\r\nconst ImageUploader = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the user is logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      alert('You need to log in first.');\r\n      navigate('/Login'); // Corrected typo from 'Loging' to 'Login'\r\n    }\r\n\r\n    // Fetch images from server on component mount\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/images');\r\n        setImages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching images:', error);\r\n        setError('Failed to fetch images. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, [navigate]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!image || !name || !description) {\r\n      setError('Please fill all fields and select an image to upload!');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n    formData.append('name', name);\r\n    formData.append('description', description);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      console.log('Upload success:', response.data);\r\n      setSuccess('Image uploaded successfully!');\r\n      // Fetch updated list of images after upload\r\n      const newImages = await axios.get('http://localhost:3001/images');\r\n      setImages(newImages.data);\r\n      // Clear form fields\r\n      setImage(null);\r\n      setName('');\r\n      setDescription('');\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      setError('Failed to upload image. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (imageId) => {\r\n    if (window.confirm('Are you sure you want to delete this image?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/image/${imageId}`);\r\n        console.log('Image deleted');\r\n        setSuccess('Image deleted successfully!');\r\n        // Remove the deleted image from the state\r\n        setImages((prevImages) => prevImages.filter((img) => img._id !== imageId));\r\n      } catch (error) {\r\n        console.error('Error deleting image:', error);\r\n        setError('Failed to delete image. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-uploader-container\">\r\n      <br/>\r\n      <h1>Image Uploader</h1>\r\n      <div className=\"upload-form\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          accept=\"image/jpeg, image/png, image/gif\"\r\n          className=\"file-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter image name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"text-input\"\r\n        />\r\n        <textarea\r\n          placeholder=\"Enter image description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"text-input\"\r\n        />\r\n        <button onClick={handleUpload} disabled={isLoading} className=\"upload-button\">\r\n          {isLoading ? 'Uploading...' : 'Upload Image'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {success && <p className=\"success-message\">{success}</p>}\r\n\r\n      <div className=\"image-gallery\">\r\n        {images.map((image) => (\r\n          <div key={image._id} className=\"image-item\">\r\n            <img\r\n              src={`http://localhost:3001${image.filepath}`}\r\n              alt={`uploaded img ${image._id}`}\r\n              className=\"gallery-image\"\r\n            />\r\n            <h3>{image.name}</h3>\r\n            <p>{image.description}</p>\r\n            <button onClick={() => handleDelete(image._id)} className=\"delete-button\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}